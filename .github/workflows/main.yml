# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule: 
    - cron: '0 0 */6 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Desktop:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-12, macos-14]
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with: 
          haxe-version: 4.2.5

      - name: Restore Previous PC Build Caches
        id: cache-pc-build-restore
        uses: actions/cache@v4
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/neko/haxe
            export/release/neko/obj
            export/release/windows/haxe
            export/release/windows/obj
          key: cache-pc-build

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib --global install hmm --quiet
          haxelib run hmm install --quiet

      - name: Compile (Windows)
        if: startsWith(matrix.os, 'windows')
        run: haxelib run lime build windows

      - name: Compile (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build linux

      - name: Compile (macOS)
        if: startsWith(matrix.os, 'macos')
        run: haxelib run lime build mac

      - name: Upload Artifact (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*
          if-no-files-found: error

      - name: Upload Artifact (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: export/release/linux/bin/*
          if-no-files-found: error

      - name: Upload Artifact (macOS 12)
        if: matrix.os == 'macos-12'
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-x86_64
          path: export/release/macos/bin/*
          if-no-files-found: error

      - name: Upload Artifact (macOS 14)
        if: matrix.os == 'macos-14'
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-arm64
          path: export/release/macos/bin/*
          if-no-files-found: error
  Mobile:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14]
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5

      - name: Restore Previous Mobile Build Caches
        id: cache-mobile-build-restore
        uses: actions/cache@v4
        with:
            path: |
              ~/haxelib
              ~/.gradle
              export/release/android/haxe
              export/release/android/obj
              export/release/ios/haxe
              export/release/ios/obj
            key: cache-mobile-build

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib install hmm --quiet
          haxelib run hmm install --quiet
          
      - name: Configure Android
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_X64
          haxelib run lime config ANDROID_SETUP true

      - name: Compile (Android)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build android

      - name: Compile (iOS)
        if: startsWith(matrix.os, 'macos')
        run: haxelib run lime build ios -final

      - name: Make Ipa
        if: startsWith(matrix.os, 'macos')
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r RaincandyEngine.ipa Payload

      - name: Upload Artifact (Android)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Upload Artifact (iOS)
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error